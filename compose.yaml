services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    stdin_open: true
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    container_name: frontend
    restart: always
    networks:
      - react-express
    depends_on:
      - backend

  backend:
    container_name: backend
    restart: always
    build: 
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres
    networks:
      - express-postgres
      - react-express
    expose: 
      - 3000
  postgres:
    container_name: postgres
    restart: always
    image: postgres:13.2
    environment:
      POSTGRES_USER: postgresuser  
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: postgresdb
      POSTGRES_HOST: postgres
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - express-postgres
      - react-express
    expose:
      - 5432

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ajeetraina@gmail.com
      PGADMIN_DEFAULT_PASSWORD: pgadminpassword
    networks:
      - express-postgres


networks:
  react-express:
  express-postgres:

volumes:
  postgresdata:
